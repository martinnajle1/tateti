{"version":3,"sources":["App.js","index.js"],"names":["initBoard","App","useState","isPlayerOne","setPlayerOne","number","setNumber","winner","isWinner","board","setBoard","boardWinners","isOver","className","map","item","index","aClass","onClick","newBoard","aWinner","cell","some","boardWinner","Winner","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAIIA,EAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAkDlDC,MAhDf,WACE,MAAkCC,oBAAS,GAA3C,mBAAKC,EAAL,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,GAAnC,mBAAKG,EAAL,KAAaC,EAAb,KACA,EAAyBJ,oBAAS,GAAlC,mBAAKK,EAAL,KAAaC,EAAb,KACA,EAAwBN,mBAASF,GAAjC,mBAAKS,EAAL,KAAYC,EAAZ,KACMC,EAAe,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IACpGC,EAAS,kBAVH,IAUSP,GAAoBE,GAYzC,OACE,qCACE,kDACA,sBAAKM,UAAU,MAAf,UACGJ,EAAMK,KAAI,SAACC,EAAMC,GAChB,IACIC,EAAS,GAIb,OAHIR,EAAMO,KACRC,EAA2B,MAAjBR,EAAMO,GAAkB,aAAe,aAE5C,sBAAKH,UAAU,QAAQK,QAAS,WACrC,IAAKN,MAAcH,EAAMO,GAAS,CAChC,IAAMG,EAAQ,YAAOV,GACrBU,EAASH,GAASb,EAAc,IAAM,IACtCO,EAASS,GACT,IAAMC,EAvBH,SAACD,GACd,IAAME,EAAOlB,EAAc,IAAM,IACjC,OAAOQ,EAAaW,MAAK,SAAAC,GACvB,OAASJ,EAASI,EAAY,MAAQF,GACnCF,EAASI,EAAY,MAAQF,GAC7BF,EAASI,EAAY,MAAQF,KAkBRG,CAAOL,GACvBX,EAASY,GACThB,GAAcD,GACdG,EAAUD,EAAS,KARhB,cAWFI,EAAMO,IAAU,qBAAKH,UAAWI,UAEtCV,GAAU,mBAAGM,UAAS,iBAAYV,EAAc,OAAS,OAA/C,oBACVS,MAAaL,GAAU,kDC3ChCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92fa2c43.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nconst CELLS = 9;\n\nlet initBoard = [null, null, null, null, null, null, null, null, null];\n\nfunction App() {\n  let [isPlayerOne, setPlayerOne] = useState(true);\n  let [number, setNumber] = useState(0);\n  let [winner, isWinner] = useState(false);\n  let [board, setBoard] = useState(initBoard);\n  const boardWinners = [[0, 1, 2], [0, 4, 8], [0, 3, 6], [1, 4, 7], [2, 4, 6], [2, 5, 8], [3, 4, 5], [6, 7, 8]];\n  const isOver = () => number === CELLS || winner;\n\n\n\n  const Winner = (newBoard) => {\n    const cell = isPlayerOne ? 'X' : 'O';\n    return boardWinners.some(boardWinner => {\n      return ((newBoard[boardWinner[0]] === cell) &&\n        (newBoard[boardWinner[1]] === cell) &&\n        (newBoard[boardWinner[2]] === cell));\n    })\n  };\n  return (\n    <>\n      <h1>Tic Tac Toe Game</h1>\n      <div className=\"App\">\n        {board.map((item, index) => {\n          const newLine = index % 3 === 2;\n          let aClass = '';\n          if (board[index]) {\n            aClass = (board[index] === 'O') ? 'blueCircle' : 'redCircle';\n          }\n          return <div className='board' onClick={() => {\n            if (!isOver() && (!board[index])) {\n              const newBoard = [...board];\n              newBoard[index] = isPlayerOne ? 'X' : 'O';\n              setBoard(newBoard);\n              const aWinner = Winner(newBoard);\n              isWinner(aWinner);\n              setPlayerOne(!isPlayerOne);\n              setNumber(number + 1);\n            }\n            return;\n          }}> {board[index] && <div className={aClass}></div>}</div>\n        })}\n        {winner && <p className={`winner ${isPlayerOne ? 'blue' : 'red'}`}>WINNER</p>}\n        {isOver() && !winner && <h1>GAME OVER</h1>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}