{"version":3,"sources":["App.js","index.js"],"names":["initialBoard","Array","fill","boardWinners","App","useState","isPlayerOne","setPlayerOne","number","setNumber","winner","isWinner","board","setBoard","isOver","Result","className","Cell","index","aClass","onClick","newBoard","aWinner","Winner","handleClick","disabled","cell","some","boardWinner","map","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAIIA,EAAeC,MADK,GACkBC,KAAK,MACzCC,EAAe,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IA2D3FC,MAzDf,WACE,MAAkCC,oBAAS,GAA3C,mBAAKC,EAAL,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,GAAnC,mBAAKG,EAAL,KAAaC,EAAb,KACA,EAAyBJ,oBAAS,GAAlC,mBAAKK,EAAL,KAAaC,EAAb,KACA,EAAwBN,mBAASL,GAAjC,mBAAKY,EAAL,KAAYC,EAAZ,KAEMC,EAAS,kBAVO,IAUDN,GAA8BE,GAE7CK,EAAS,SAAC,GAAD,SAAGL,OAA+B,mBAAGM,UAAS,iBAAYV,EAAc,OAAS,OAA/C,oBAAR,MAEnCW,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACVC,EAAS,GACTP,EAAMM,KACRC,EAA2B,MAAjBP,EAAMM,GAAkB,aAAe,aAcnD,OACE,wBAAQF,UAAU,OAAOI,QAAS,kBAbhB,WAClB,IAAKR,EAAMM,GAAQ,CACjB,IAAMG,EAAQ,YAAOT,GACrBS,EAASH,GAASZ,EAAc,IAAM,IACtCO,EAASQ,GACT,IAAMC,EAAUC,EAAOF,GACvBV,EAASW,GACTf,GAAcD,GACdG,EAAUD,EAAS,IAKmBgB,IAAeC,SAAUX,IAAjE,SACGF,EAAMM,IAAU,qBAAKF,UAAWG,OAIjCI,EAAS,SAACF,GACd,IAAMK,EAAOpB,EAAc,IAAM,IACjC,OAAOH,EAAawB,MAAK,SAAAC,GAAW,OAClCP,EAASO,EAAY,MAAQF,GAC5BL,EAASO,EAAY,MAAQF,GAC7BL,EAASO,EAAY,MAAQF,MAKlC,OACE,qCACE,kDACA,sBAAKV,UAAU,MAAf,UACGJ,EAAMiB,KAAI,SAACC,EAAGZ,GAAJ,OACT,cAACD,EAAD,CAAMC,MAAOA,OAEf,cAACH,EAAD,CAAQL,OAAQA,IACfI,MAAaJ,GAAU,kDCrDhCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1b5c29d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst NUMBER_OF_CELLS = 9;\nlet initialBoard = Array(NUMBER_OF_CELLS).fill(null);\nconst boardWinners = [[0, 1, 2], [0, 4, 8], [0, 3, 6], [1, 4, 7], [2, 4, 6], [2, 5, 8], [3, 4, 5], [6, 7, 8]];\n\nfunction App() {\n  let [isPlayerOne, setPlayerOne] = useState(true);\n  let [number, setNumber] = useState(0);\n  let [winner, isWinner] = useState(false);\n  let [board, setBoard] = useState(initialBoard);\n\n  const isOver = () => number === NUMBER_OF_CELLS || winner;\n\n  const Result = ({ winner }) => !winner ? null : (<p className={`winner ${isPlayerOne ? 'blue' : 'red'}`}>WINNER</p>);\n\n  const Cell = ({ index }) => {\n    let aClass = '';\n    if (board[index]) {\n      aClass = (board[index] === 'O') ? 'blueCircle' : 'redCircle';\n    }\n    const handleClick = () => {\n      if (!board[index]) {\n        const newBoard = [...board];\n        newBoard[index] = isPlayerOne ? 'X' : 'O';\n        setBoard(newBoard);\n        const aWinner = Winner(newBoard);\n        isWinner(aWinner);\n        setPlayerOne(!isPlayerOne);\n        setNumber(number + 1);\n      }\n      return;\n    }\n    return (\n      <button className='cell' onClick={() => handleClick()} disabled={isOver()}>\n        {board[index] && <div className={aClass}></div>}\n      </button>)\n  };\n\n  const Winner = (newBoard) => {\n    const cell = isPlayerOne ? 'X' : 'O';\n    return boardWinners.some(boardWinner =>\n    ((newBoard[boardWinner[0]] === cell) &&\n      (newBoard[boardWinner[1]] === cell) &&\n      (newBoard[boardWinner[2]] === cell))\n    )\n  };\n\n\n  return (\n    <>\n      <h1>Tic Tac Toe Game</h1>\n      <div className=\"App\">\n        {board.map((_, index) =>\n          <Cell index={index} />\n        )}\n        <Result winner={winner} />\n        {isOver() && !winner && <h1>GAME OVER</h1>}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}